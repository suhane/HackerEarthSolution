


int search(int arr[], int target){

int low=0;
int high=arr.length-1;
while(low<=high){
int mid=(low+high)/2;
if(arr[mid]==target){
return mid;
}
else
if(arr[mid]>target)
high=mid+1;
else
low=mid-1;
}
}

}

1 2 3 4 5 6 7 8 9 10 11 12
7 8 9 10 11 12 13 14 15 16 17 18 19 1 2 3 4 5 6

int findPivot(int[] arr){
int low=0;
int high=arr.length-1;
while(low<=high){
int mid=(low+high)/2;
if(mid<n-1 && arr[mid-1]>arr[mid] && arr[mid+1]>arr[mid])
    return mid;
if(arr[low]<arr[mid])
    low=mid+1;
else
    high=mid-1;
}

}