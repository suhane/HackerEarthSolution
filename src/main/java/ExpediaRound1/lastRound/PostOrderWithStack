
---------using one stack--------------
void postOrder(TreeNode root){

TreeNode prev=null;
while (!s.isEmpty())
        {
            Node current = s.peek();
            if(prev==null || prev.left==current || prev.right==current){
                if(current.left!=null)
                    s.push(current.left);
                else if(current.right!=null)
                    s.push(current.right);
            }
            else if(current.left==prev){
                 s.push(current.right);
            }
            else{
                System.out.print(current.data);
                s.pop();
            }
            prev=current;
        }
}
}


---------using two stack--------------

first do reverse pre-order traversal

void postOrder(TreeNode root){
Stack<TreeNode> s1= new Stack<TreeNode>();
Stack<Integer> s2= new Stack<Integer>();

if(root!=null)
s1.push(root);
while(!s.isEmpty()){

TreeNode tmp=s1.pop();

if(tmp.left!=null)
s1.push(tmp.left);

if(tmp.right!=null)
s1.push(tmp.right);

s2.push(tmp.data);

}

while(!s2.isEmpty()){
System.out.print(s2.pop());
}
}





}