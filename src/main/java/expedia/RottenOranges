

static class Elem{
int x;
int y;

public Elem(int x, int y){
this.x=x;
this.y=y;
}

}

public int minTimeFrame(int[][] arr, int n ,int m){

Queue<Elem> q= new LinkedList<Elem>();
int rotCount,timeFrame=0;
for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
        if(arr[i][j]==2){
            q.offer(new Elem(i,j));
            rotCount++;
            }
    }

}
q.offer(null);

while(!q.isEmpty()){

    Elem elem= q.poll();
    if(elem!=null){
        int i=elem.x;
        int j=elem.j;
        if(isValidIndices(i-1,j,m,n) && arr[i-1][j]!=2){
           q.offer(new Elem(i-1,j));
           arr[i-1][j]=2;
           rotCount++
                }
        if(isValidIndices(i,j-1,m,n) && arr[i][j-1]!=2){
                   q.offer(new Elem(i,j-1));
                   arr[i][j-1]=2;
                   rotCount++;
                }
        if(isValidIndices(i+1,j,m,n) && arr[i+1][j]!=2){
                   q.offer(new Elem(i+1,j));
                   arr[i+1][j]=2;
                   rotCount++;
                }
        if(isValidIndices(i,j+1,m,n) && arr[i][j+1]!=2){
                   q.offer(new Elem(i,j+1));
                   arr[i][j+1]=2;
                   rotCount++;
                }
    }
    else{
        if(!q.isEmpty()){
           timeFrame++;
           q.offer(null);
        }

    }

}

if(rotCount==m*n)
    return timeFrame;
else
    return -1;


}

private boolean isValidIndices(int i, int j,int n, int m){
    return (i>=0 && i<n && j>=0 && j<m);
}
